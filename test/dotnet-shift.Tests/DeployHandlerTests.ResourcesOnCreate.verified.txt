[
  {
    ApiVersion: apps/v1,
    Kind: Deployment,
    Metadata: {
      Annotations: {
        app.openshift.io/vcs-ref: mybranch1,
        app.openshift.io/vcs-uri: http://myurl,
        image.openshift.io/triggers: [{"from":{"kind":"ImageStreamTag","name":"mycomponent:latest"},"fieldPath":"spec.template.spec.containers[?(@.name==\"app\")].image","paused":"true"}]
      },
      Labels: {
        app.kubernetes.io/component: mycomponent,
        app.kubernetes.io/instance: myapp,
        app.kubernetes.io/managed-by: dotnet-shift,
        app.kubernetes.io/name: mycomponent,
        app.kubernetes.io/part-of: myapp,
        app.openshift.io/runtime: dotnet
      },
      Name: mycomponent
    },
    Spec: {
      Selector: {
        MatchLabels: {
          app: mycomponent
        }
      },
      Strategy: {
        Type: RollingUpdate
      },
      Template: {
        Metadata: {
          Labels: {
            app: mycomponent
          }
        },
        Spec: {
          Containers: [
            {
              Image: image-registry.openshift-image-registry.svc:5000/mynamespace/mycomponent@sha256:deadbeef,
              Name: app,
              Ports: [
                {
                  ContainerPort1: 8080,
                  Name: http,
                  Protocol: TCP
                }
              ],
              Resources: {}
            }
          ]
        }
      }
    }
  },
  {
    ApiVersion: image.openshift.io/v1,
    Kind: ImageStream,
    Metadata: {
      Annotations: {
        openshift.io/display-name: .NET Runtime,
        openshift.io/provider-display-name: Red Hat
      },
      Name: dotnet-runtime
    },
    Spec: {
      Tags: [
        {
          Annotations: {
            openshift.io/display-name: .NET Runtime 5.0
          },
          From: {
            Kind: DockerImage,
            Name: registry.access.redhat.com/ubi8/dotnet-50-runtime:latest
          },
          Name: 5.0,
          ReferencePolicy: {
            Type: Local
          }
        }
      ]
    }
  },
  {
    ApiVersion: image.openshift.io/v1,
    Kind: ImageStream,
    Metadata: {
      Labels: {
        app.kubernetes.io/component: mycomponent,
        app.kubernetes.io/instance: myapp,
        app.kubernetes.io/managed-by: dotnet-shift,
        app.kubernetes.io/name: mycomponent,
        app.kubernetes.io/part-of: myapp,
        app.openshift.io/runtime: dotnet
      },
      Name: mycomponent
    }
  },
  {
    ApiVersion: route.openshift.io/v1,
    Kind: Route,
    Metadata: {
      Labels: {
        app.kubernetes.io/component: mycomponent,
        app.kubernetes.io/instance: myapp,
        app.kubernetes.io/managed-by: dotnet-shift,
        app.kubernetes.io/name: mycomponent,
        app.kubernetes.io/part-of: myapp
      },
      Name: mycomponent
    },
    Spec: {
      Port: {
        TargetPort: 8080
      },
      To: {
        Kind: Service,
        Name: mycomponent
      }
    }
  },
  {
    Data: {
      .dockercfg: ewogICAgImltYWdlLXJlZ2lzdHJ5Lm9wZW5zaGlmdC1pbWFnZS1yZWdpc3RyeS5zdmM6NTAwMCI6IHsKICAgICAgICAidXNlcm5hbWUiOiAic2VydmljZWFjY291bnQiLAogICAgICAgICJwYXNzd29yZCI6ICJzZWNyZXQxMjMiLAogICAgICAgICJlbWFpbCI6ICJzZXJ2aWNlYWNjb3VudEBleGFtcGxlLm9yZyIKICAgIH0KfQ==
    },
    Metadata: {
      Annotations: {
        kubernetes.io/service-account.name: builder
      },
      Name: builder-dockercfg-test
    },
    Type: type=kubernetes.io/dockercfg
  },
  {
    ApiVersion: v1,
    Kind: Service,
    Metadata: {
      Labels: {
        app.kubernetes.io/component: mycomponent,
        app.kubernetes.io/instance: myapp,
        app.kubernetes.io/managed-by: dotnet-shift,
        app.kubernetes.io/name: mycomponent,
        app.kubernetes.io/part-of: myapp
      },
      Name: mycomponent
    },
    Spec: {
      Ports: [
        {
          Name: http,
          Port: 8080,
          Protocol: TCP
        }
      ],
      Selector: {
        app: mycomponent
      }
    }
  }
]